//inplace heap sort-->takes no space ==> insetion+removal in same array
#include <bits/stdc++.h>
using namespace std;

void inplaceHeap(int pq[],int n){
    //insertion
    for(int i=1;i<n;i++){
        int child=i;
        while(child > 0){
            int parent=(child-1)/2;
            if(pq[parent] > pq[child]){
                int temp=pq[parent];
                pq[parent]=pq[child];
                pq[child]=temp;

            }
            else break;
            child=parent;
        }
    }
    //removal
    int size=n;
    while(size>1){
        int temp=pq[0];
        pq[0]=pq[size-1];
        pq[size-1]=temp;
        size--;
        int parent=0;
        int left=2*parent+1;
        int right=2*parent+2;
        while(left < size){
            int minindex=parent;
            if(pq[minindex] > pq[left]){
                minindex=left;
            }
            if(right < size  && pq[minindex] > pq[right]){
                minindex=right;
            }
            if(minindex == parent){
                break;
            }
            int temp=pq[minindex];
            pq[minindex]=pq[parent];
            pq[parent]=temp; 
            parent=minindex;
            left=2*parent+1;
            right=2*parent+2;
        }
    }
}

int main()
{
    int input[]={5,1,2,0,8};
    inplaceHeap(input,5);
    for(int i=0;i<5;i++){
        cout<<input[i]<<" ";
    }   
    return 0;
}
