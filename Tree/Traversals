// 1 3 2 3 4 2 5 6 2 7 8 0 0 0 0 1 9 0

#include <bits/stdc++.h>
using namespace std;
class TreeNode{
    public:
    int data;
    vector<TreeNode*>children;
    TreeNode(int data){
        this->data=data;
    }
};

TreeNode* InputLevelWise(){
    int rootData;
    // cout<<"Enter root data: ";
    cin>>rootData;
    TreeNode* root=new TreeNode(rootData);
    queue<TreeNode*> queueNode;
    queueNode.push(root);
    while(!queueNode.empty()){
        TreeNode* front=queueNode.front();
        queueNode.pop();
        int n;
        // cout<<"Enter no of children of "<<front->data<<" : ";
        cin>>n;
        for(int i=0;i<n;i++){
            int childData;
            // cout<<"Enter data of "<<i<<" child: ";
            cin>>childData;
            TreeNode* child=new TreeNode(childData);
            front->children.push_back(child);
            queueNode.push(child);
        }

    }
    return root;
}


void Preorder(TreeNode* root){
    cout<<root->data<<" ";
    for(int i=0;i<root->children.size();i++){
        Preorder(root->children[i]);
    }
} 

void Postorder(TreeNode* root){
    for(int i=0;i<root->children.size();i++){
        Postorder(root->children[i]);
    }
    cout<<root->data<<" ";
}

int main()
{
    TreeNode* root=InputLevelWise();
    Preorder(root);
    cout<<endl;
    Postorder(root);
    
    return 0;
}
